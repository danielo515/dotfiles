#!/usr/bin/env sh

# necessary to load scripting-addition during startup on macOS Big Sur
# *yabai --load-sa* is configured to run through sudo without a password
sudo yabai --load-sa
yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"

Configure space with a label and an index
# If the space already exists, only sets the name
# if the space does not exist, creates it
setup_space() {
  idx="$1"
  name="$2"
  space=
  echo "setup space $idx : $name"

  space=$(yabai -m query --spaces --space "$idx")
  if [ -z "$space" ]; then
    yabai -m space --create
  fi

  yabai -m space "$idx" --label "$name"
}

# mission-control desktop labels
yabai -m space 1 --label "personal"
setup_space 2 "notes"
setup_space 3 "code"
setup_space 4 "code_work"
setup_space 5 "chat"
setup_space 6 "media"
setup_space 7 "other"
setup_space 8 "scrap"
setup_space 8 "games"

# window rules
#yabai -m rule --add app="^Firefox$" space=web
yabai -m rule --add app="^Obsidian$" title="Ipad" space=notes
yabai -m rule --add app="^time tracker" space=personal
# Exclude problematic apps from being managed:
yabai -m rule --add app="^(LuLu|Calculator|Software Update|Dictionary|VLC|System Preferences|System Settings|zoom.us|Photo Booth|Archive Utility|Python|LibreOffice|App Store|Steam|Alfred|Activity Monitor)$" manage=off
yabai -m rule --add label="Finder" app="^Finder$" title="(Co(py|nnect)|Move|Info|Pref)" manage=off
#yabai -m rule --add label="Safari" app="^Safari$" title="^(General|(Tab|Password|Website|Extension)s|AutoFill|Se(arch|curity)|Privacy|Advance)$" manage=off
yabai -m rule --add label="About This Mac" app="System Information" title="About This Mac" manage=off
yabai -m rule --add label="Select file to save to" app="^Inkscape$" title="Select file to save to" manage=off
yabai -m rule --add app="^(Calculator|System Preferences|Archive Utility)$" manage=off
yabai -m rule --add app="^(Hammerspoon)" manage=off
# yabai -m rule --add app="^(Arc)" title="Danielo" manage=off

# signals
yabai -m signal --add event=window_destroyed active=yes action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse &> /dev/null || yabai -m window --focus \$(yabai -m query --windows --space | jq .[0].id) &> /dev/null"
yabai -m signal --add event=window_minimized active=yes action="if \$(yabai -m query --windows --window \$YABAI_WINDOW_ID | jq -r '.\"is-floating\"'); then yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse &> /dev/null || yabai -m window --focus \$(yabai -m query --windows --space | jq .[0].id) &> /dev/null; fi"

yabai -m signal --add event=window_created action="sketchybar -m --trigger window_change &> /dev/null"
yabai -m signal --add event=window_destroyed action="sketchybar -m --trigger window_change &> /dev/null"

# specific space settings
# yabai -m config --space mail  layout stack
# yabai -m config --space games layout float

# global settings
yabai -m config \
  external_bar all:20:0 \
  mouse_follows_focus on \
  focus_follows_mouse off \
  window_placement second_child \
  window_shadow off \
  window_animation_duration 0.0 \
  window_opacity_duration 0.0 \
  active_window_opacity 1.0 \
  normal_window_opacity 0.95 \
  window_opacity on \
  insert_feedback_color 0xaad75f5f \
  split_ratio 0.50 \
  split_type auto \
  auto_balance on \
  top_padding 8 \
  left_padding 10 \
  right_padding 10 \
  bottom_padding 10 \
  window_gap 8 \
  layout bsp \
  mouse_modifier alt \
  mouse_action1 move \
  mouse_action2 resize \
  mouse_drop_action swap

echo "yabai configuration loaded.."
echo "Loading funky borders.."
borders &
