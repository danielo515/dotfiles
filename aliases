### NOTE ###
# Do not add more aliases to this file
# The way I handle aliases now is by creating a dedicated file for each set of aliases
# Check the folder chezmoi/dot_config/aliases
alias reload='source ~/.bashrc'
alias please='__executeLastCommandAsSuperUser'
alias dotvim='(cd ~/.dotfiles && vim nvim/init.vim)'
alias zvim='(cd ~/.dotfiles && vim zsh/zshrc)'
# ---- Docker aliases
alias drun='docker run -it --rm -e NPM_TOKEN=${NPM_TOKEN}'
alias drunvol='docker run -it --rm -v $PWD:/home -e NPM_TOKEN=${NPM_TOKEN}'
alias dex='docker exec -it '
alias cordova='drun --privileged -v /dev/bus/usb:/dev/bus/usb -v $PWD:/src --name cordova beevelop/cordova'
alias dimg='docker images'
alias dimgs='dimg | sort -n -k 7' # sort by size
alias dimgst='dimg | head -1 && dimg | sort -r -k 1' # sort by title
alias drim='docker rmi'
alias dps='docker ps --format "table {{.Names}}\t\t{{.Image}}"'
alias docker-ps='docker ps --format "{{.Image}} \t\t {{.Names}}"'
alias dpsa='docker ps -a --format "table {{.Names}}\t\t{{.Image}}"'
alias docker-cleanup='docker ps -a | grep Exit | grep months | cut -d " " -f 1 | xargs docker rm'
alias dm='docker-machine'
alias dc='docker-compose'
alias dctail='docker-compose logs -f --tail=50'
alias dcreset='docker-compose stop && docker-compose rm -f'
dimg-repofilter(){
 docker images --format "{{.Repository}} {{.ID}}" | grep $1
}
# ---- System aliases
alias chx='chmod 755'
alias chr='chmod 644'
alias l='ls -l'
alias ll='ls -la'
alias lsh='ls -lhXG'
#--------------
# ---- Git ----
#--------------
alias g='git status'
alias ga='git add --all'
alias gb='git branch'
alias gc='git checkout'
alias gcm='git checkout master'
alias gac='ga && gcm'
alias push='git push'
alias pushu='git push -u origin HEAD'
alias gundo='git reset --soft HEAD~1'
alias cdsub='cd $(git submodule --quiet foreach "echo \$path" | fzf)' # cd to git submodule with fzf

function git_grep_file() {
  #git_grep_file filename str
  git --no-pager grep "$2" $(git rev-list --all -- $1) -- $1
}

function rebaseN(){
    noglob git rebase --interactive HEAD~$1
}

#----- Other stuff
alias bashrc='vi ~/.bashrc && refresh'
alias lgrep=' ls -la | grep'

function pushSnippets(){
 cd ~/mega/programacion/node/vscodePlugins/vscode-node-snippets/
 git add . && git commit -m "Added more stuff" && git push
 cd -
}

function fuzzy_cat(){
  fd "$1" ../ -x cat {}
}

function fzfkill() {
 line=$(ps -ef | fzf -q "$1" -1 --height 40% --layout reverse -d 20)
 processnumber=$(echo $line | awk '{print $2}')
  if [ -n "$processnumber" ]; then
    kill -9 $processnumber
  fi
}

alias fkill='fzfkill'
alias fzkill='fzfkill'


# ---- NPM
alias npm-i='npm i --registry=https://registry.npmjs.org/'
alias npr='npm run'
alias npmd='npm i -D'
alias startElastic='docker run -p 9200:9200 -p 9300:9300 -e "discovery.type=single-node" docker.elastic.co/elasticsearch/elasticsearch:5.4.3'
alias milis='echo $(($(date +%s%N)/1000000))'
alias yarnd='yarn add -D'
# Systems
alias who_uses_serial='lsof  | grep "/dev/cu"'
port_used(){
  lsof -nP -i4TCP:$1
}
alias pport='port_used'
# ---- STUPID
alias oraculo='node bin/oraculo.js'
# ---- WORK related
create_component (){
    mkdir $1 && cd $1
    touch index.js
    echo "import $1 from './$1.component';\n\nexport default $1;" > index.js
    for i in styled.js component.jsx variants.js;do
        touch "$1.$i"
    done
    echo "
    import styled from '@emotion/styled';
    import COLORS from '$shared/variables/colors';
    " > $1.styled.js
    cd -
}
# ---- QMK
checkout-danielo-ergodox(){
    read -r DANIELO_BRANCH
    git checkout $DANIELO_BRANCH users/danielo515
    git checkout $DANIELO_BRANCH  quantum/process_keycode/process_leader.c
    git checkout $DANIELO_BRANCH keyboards/ergodox_ez/keymaps/danielo515
}

check_command() {
   local command=$1
   if command -v "$command" &> /dev/null; then
       return 0
   else
       return 1
   fi
}
# --- Better UNIX commands ---------- 
if  check_command exa; then
alias ls='exa'
alias l='exa -la'
fi
alias sloc='scc'
# --- Neovim flavours ----------
chadvim(){
  NVIM_APPNAME=nvchad nvim "$@"
}

# previously it was lazyvim,
lzvim(){
  NVIM_APPNAME=Lazy nvim "$@"
}
s(){
  source "$1"
}
# When you are in a git repository, add the repository you say as remote
# it uses github cli to ask for the url
function ghadd {
  git status &> /dev/null
  if [ $? -ne 0 ]; then
    echo "Not a git repository"
    return 1
  fi
    
    curdir=$(pwd)
    defaultName=$(basename $curdir)
    repo=$(gum input --prompt "Repo name: " --value $defaultName)
    git remote add origin $(gh repo view $repo --json sshUrl --jq .sshUrl)
}

# adds a github repository as a submodule
function ghsub {
  git status &> /dev/null
  if [ $? -ne 0 ]; then
    echo "Not a git repository"
    return 1
  fi
  repo=$(gum input --prompt "Repo name: ")
  git submodule add $(gh repo view $repo --json sshUrl --jq .sshUrl)
}
# create a new repo in github
function ghnew {
  repo=$(gum input --prompt "Repo name: ")
  gh repo create $repo -l MIT --public
}

# takes a file containing a list of newline separated files and zips them all
function zip_list {
  if [ $# -ne 2 ]; then
    echo "Usage: zip_list <zipfile> <listfile>"
    return 1
  fi
  zip "$1" -@ < "$2"
}

favs() {
  fd . "$(chezmoi source-path)/.." | fzf --preview 'bat --color=always --style=header,grid --line-range :500 {}'
}

rgi() {
  rg --no-ignore --hidden "$@"
}

## Add a symlink into chezmoi creating the appropriate template
alias chezmoln='chezmoi add --template-symlinks '
ALIASES_FOLDER="$HOME/.config/aliases"
## If there are files under an alias folder, source all of them that end with _aliases
if [ -d "$ALIASES_FOLDER" ]; then
  for file in $ALIASES_FOLDER/*_aliases; do
    if [ -f "$file" ]; then
      source "$file"
    fi
  done
fi
